{"ast":null,"code":"import _regeneratorRuntime from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/austinirvine/Documents/genlouise/src/layouts/Dashboard/components/Topbar/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { IconButton, Toolbar, Typography, Box } from '@material-ui/core';\nimport { Menu as MenuIcon, Close as CloseIcon } from '@material-ui/icons'; // Shared services\n\nimport { getNotifications as _getNotifications } from '../../../../services/notification'; // Component styles\n\nimport styles from './styles';\n\nvar Topbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Topbar, _Component);\n\n  function Topbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Topbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Topbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.signal = true;\n    _this.state = {\n      notifications: [],\n      notificationsLimit: 4,\n      notificationsCount: 0,\n      notificationsEl: null,\n      names: []\n    };\n    return _this;\n  }\n\n  _createClass(Topbar, [{\n    key: \"getNotifications\",\n    value: function () {\n      var _getNotifications2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var notificationsLimit, _ref, notifications, notificationsCount;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                notificationsLimit = this.state.notificationsLimit;\n                _context.next = 4;\n                return _getNotifications(notificationsLimit);\n\n              case 4:\n                _ref = _context.sent;\n                notifications = _ref.notifications;\n                notificationsCount = _ref.notificationsCount;\n\n                if (this.signal) {\n                  this.setState({\n                    notifications: notifications,\n                    notificationsCount: notificationsCount\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\");\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      function getNotifications() {\n        return _getNotifications2.apply(this, arguments);\n      }\n\n      return getNotifications;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.signal = true;\n      this.getNotifications();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.signal = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          title = _this$props.title,\n          isSidebarOpen = _this$props.isSidebarOpen,\n          onToggleSidebar = _this$props.onToggleSidebar;\n      var rootClassName = classNames(classes.root, className);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: rootClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.menuButton,\n        onClick: onToggleSidebar,\n        variant: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, isSidebarOpen ? React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, title)))));\n    }\n  }]);\n\n  return Topbar;\n}(Component);\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\nTopbar.defaultProps = {\n  onToggleSidebar: function onToggleSidebar() {}\n};\nexport default compose(withRouter, withStyles(styles))(Topbar);","map":{"version":3,"sources":["/Users/austinirvine/Documents/genlouise/src/layouts/Dashboard/components/Topbar/index.jsx"],"names":["React","Component","Fragment","withRouter","classNames","compose","PropTypes","withStyles","IconButton","Toolbar","Typography","Box","Menu","MenuIcon","Close","CloseIcon","getNotifications","styles","Topbar","signal","state","notifications","notificationsLimit","notificationsCount","notificationsEl","names","setState","props","classes","className","title","isSidebarOpen","onToggleSidebar","rootClassName","root","toolbar","menuButton","propTypes","string","object","isRequired","history","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { IconButton, Toolbar, Typography, Box } from '@material-ui/core';\n\nimport {\n  Menu as MenuIcon,\n  Close as CloseIcon\n} from '@material-ui/icons';\n\n// Shared services\nimport { getNotifications } from '../../../../services/notification';\n\n// Component styles\nimport styles from './styles';\n\nclass Topbar extends Component {\n\n  signal = true;\n\n  state = {\n    notifications: [],\n    notificationsLimit: 4,\n    notificationsCount: 0,\n    notificationsEl: null,\n    names: [],\n  };\n\n  async getNotifications() {\n    try {\n      const { notificationsLimit } = this.state;\n\n      const { notifications, notificationsCount } = await getNotifications(\n        notificationsLimit\n      );\n\n      if (this.signal) {\n        this.setState({\n          notifications,\n          notificationsCount\n        });\n      }\n    } catch (error) {\n      return;\n    }\n  }\n\n  componentDidMount() {\n    this.signal = true;\n    this.getNotifications();\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  render() {\n\n    const {\n      classes,\n      className,\n      title,\n      isSidebarOpen,\n      onToggleSidebar\n    } = this.props;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Fragment>\n        <div className={rootClassName}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              className={classes.menuButton}\n              onClick={onToggleSidebar}\n              variant=\"text\"\n            >\n              {isSidebarOpen ? <CloseIcon /> : <MenuIcon />}\n            </IconButton>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography\n                variant=\"h4\"\n              >\n                {title}\n              </Typography>\n            </Box>\n            \n\n          </Toolbar>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\n\nTopbar.defaultProps = {\n  onToggleSidebar: () => {}\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(Topbar);\n"]},"metadata":{},"sourceType":"module"}