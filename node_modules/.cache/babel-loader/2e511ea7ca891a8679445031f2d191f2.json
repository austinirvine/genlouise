{"ast":null,"code":"var sys = require(\"util\"),\n    fs = require(\"fs\");\n\nfunction processImageDir(path, outFilename, cb) {\n  fs.readdir(path, function (err, files) {\n    var imgfiles = []; // Check for images and push on the array if it's a match.\n\n    files.forEach(function (name) {\n      if (name.substr(-4).match(/(png|jpeg|jpg|gif)/)) {\n        var dirName = \"./components/Art/\" + name;\n        imgfiles.push({\n          src: dirName,\n          width: 2,\n          height: 2\n        });\n      }\n    });\n    fs.writeFile(__dirname + '/' + outFilename, JSON.stringify({\n      images: imgfiles\n    }), function (err) {\n      if (err) throw err;\n      cb && cb(\"Art Files Stored in JSON.\");\n    });\n  });\n}\n\nfunction getWidthAndHeight() {\n  alert(\"'\" + this.name + \"' is \" + this.width + \" by \" + this.height + \" pixels in size.\");\n  return true;\n}\n\nprocessImageDir('./components/Art/', \"preload-images.json\", function (message) {\n  console.log(message);\n});","map":{"version":3,"sources":["/Users/austinirvine/Documents/genlouise/src/views/Dashboard/create-json.js"],"names":["sys","require","fs","processImageDir","path","outFilename","cb","readdir","err","files","imgfiles","forEach","name","substr","match","dirName","push","src","width","height","writeFile","__dirname","JSON","stringify","images","getWidthAndHeight","alert","message","console","log"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAjB;AAAA,IAA2BC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAvC;;AAEA,SAASE,eAAT,CAAyBC,IAAzB,EAA+BC,WAA/B,EAA4CC,EAA5C,EAAgD;AAC5CJ,EAAAA,EAAE,CAACK,OAAH,CAAWH,IAAX,EAAiB,UAASI,GAAT,EAAcC,KAAd,EAAqB;AAElC,QAAIC,QAAQ,GAAG,EAAf,CAFkC,CAIlC;;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAc,UAASC,IAAT,EAAe;AACzB,UAAGA,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,EAAgBC,KAAhB,CAAsB,oBAAtB,CAAH,EAAgD;AAC5C,YAAIC,OAAO,GAAG,sBAAsBH,IAApC;AACAF,QAAAA,QAAQ,CAACM,IAAT,CAAc;AAAEC,UAAAA,GAAG,EAACF,OAAN;AAAeG,UAAAA,KAAK,EAAE,CAAtB;AAAyBC,UAAAA,MAAM,EAAE;AAAjC,SAAd;AACH;AACJ,KALD;AAOAjB,IAAAA,EAAE,CAACkB,SAAH,CAAaC,SAAS,GAAG,GAAZ,GAAkBhB,WAA/B,EAA4CiB,IAAI,CAACC,SAAL,CAAe;AACvDC,MAAAA,MAAM,EAAEd;AAD+C,KAAf,CAA5C,EAEI,UAASF,GAAT,EAAc;AACd,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTF,MAAAA,EAAE,IAAIA,EAAE,CAAC,2BAAD,CAAR;AACH,KALD;AAOH,GAnBD;AAoBH;;AAED,SAASmB,iBAAT,GAA6B;AACzBC,EAAAA,KAAK,CAAC,MAAM,KAAKd,IAAX,GAAkB,OAAlB,GAA4B,KAAKM,KAAjC,GAAyC,MAAzC,GAAkD,KAAKC,MAAvD,GAAgE,kBAAjE,CAAL;AACA,SAAO,IAAP;AACH;;AAEDhB,eAAe,CAAC,mBAAD,EAAsB,qBAAtB,EAA6C,UAASwB,OAAT,EAAkB;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,CAFc,CAAf","sourcesContent":["var sys = require(\"util\"), fs = require(\"fs\");\n\nfunction processImageDir(path, outFilename, cb) {\n    fs.readdir(path, function(err, files) {\n\n        var imgfiles = [];\n\n        // Check for images and push on the array if it's a match.\n        files.forEach(function(name) {\n            if(name.substr(-4).match(/(png|jpeg|jpg|gif)/)) {\n                var dirName = \"./components/Art/\" + name;\n                imgfiles.push({ src:dirName, width: 2, height: 2 });\n            }\n        });\n\n        fs.writeFile(__dirname + '/' + outFilename, JSON.stringify({\n            images: imgfiles\n        }), function(err) {\n            if (err) throw err;\n            cb && cb(\"Art Files Stored in JSON.\");\n        });\n\n    });\n}\n\nfunction getWidthAndHeight() {\n    alert(\"'\" + this.name + \"' is \" + this.width + \" by \" + this.height + \" pixels in size.\");\n    return true;\n}\n\nprocessImageDir('./components/Art/', \"preload-images.json\", function(message) {\n    console.log(message);\n});"]},"metadata":{},"sourceType":"module"}