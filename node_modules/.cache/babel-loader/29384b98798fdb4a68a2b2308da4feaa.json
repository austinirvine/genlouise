{"ast":null,"code":"import _objectWithoutProperties from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/austinirvine/Documents/genlouise/src/views/Settings/components/Password/index.jsx\";\nimport React, { Component } from 'react'; // Externals\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Button, TextField } from '@material-ui/core'; // Shared components\n\nimport { Portlet, PortletHeader, PortletLabel, PortletContent, PortletFooter } from '../../../../components'; // Component styles\n\nimport styles from './styles';\n\nvar Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Password, _Component);\n\n  function Password() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Password);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Password)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      values: {\n        password: '',\n        confirm: ''\n      }\n    };\n\n    _this.handleFieldChange = function (field, value) {\n      var newState = _objectSpread({}, _this.state);\n\n      newState.values[field] = value;\n\n      _this.setState(newState, _this.validateForm);\n    };\n\n    return _this;\n  }\n\n  _createClass(Password, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"className\"]);\n\n      var values = this.state.values;\n      var rootClassName = classNames(classes.root, className);\n      return React.createElement(Portlet, Object.assign({}, rest, {\n        className: rootClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(PortletHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(PortletLabel, {\n        subtitle: \"Update password\",\n        title: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(PortletContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: classes.textField,\n        label: \"Password\",\n        name: \"password\",\n        onChange: function onChange(event) {\n          return _this2.handleFieldChange('password', event.target.value);\n        },\n        type: \"password\",\n        value: values.password,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: classes.textField,\n        label: \"Confirm password\",\n        name: \"confirm\",\n        onChange: function onChange(event) {\n          return _this2.handleFieldChange('confirm', event.target.value);\n        },\n        type: \"password\",\n        value: values.confirm,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(PortletFooter, {\n        className: classes.portletFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }]);\n\n  return Password;\n}(Component);\n\nPassword.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Password);","map":{"version":3,"sources":["/Users/austinirvine/Documents/genlouise/src/views/Settings/components/Password/index.jsx"],"names":["React","Component","PropTypes","classNames","withStyles","Button","TextField","Portlet","PortletHeader","PortletLabel","PortletContent","PortletFooter","styles","Password","state","values","password","confirm","handleFieldChange","field","value","newState","setState","validateForm","props","classes","className","rest","rootClassName","root","form","textField","event","target","portletFooter","propTypes","string","object","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC,C,CAEA;;AACA,SACEC,OADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,aALF,QAMO,wBANP,C,CAQA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,OAAO,EAAE;AAFH;AADF,K;;UAORC,iB,GAAoB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpC,UAAMC,QAAQ,qBAAQ,MAAKP,KAAb,CAAd;;AAEAO,MAAAA,QAAQ,CAACN,MAAT,CAAgBI,KAAhB,IAAyBC,KAAzB;;AAEA,YAAKE,QAAL,CAAcD,QAAd,EAAwB,MAAKE,YAA7B;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UACwBC,IADxB;;AAAA,UAECZ,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAIP,UAAMa,aAAa,GAAGzB,UAAU,CAACsB,OAAO,CAACI,IAAT,EAAeH,SAAf,CAAhC;AAEA,aACE,oBAAC,OAAD,oBACMC,IADN;AAEE,QAAA,SAAS,EAAEC,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAC,iBADX;AAEE,QAAA,KAAK,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAUE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAEH,OAAO,CAACK,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAEL,OAAO,CAACM,SADrB;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBACb,MAAI,CAACd,iBAAL,CAAuB,UAAvB,EAAmCc,KAAK,CAACC,MAAN,CAAab,KAAhD,CADa;AAAA,SAJjB;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,KAAK,EAAEL,MAAM,CAACC,QARhB;AASE,QAAA,OAAO,EAAC,UATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAYE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAES,OAAO,CAACM,SADrB;AAEE,QAAA,KAAK,EAAC,kBAFR;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBACb,MAAI,CAACd,iBAAL,CAAuB,SAAvB,EAAkCc,KAAK,CAACC,MAAN,CAAab,KAA/C,CADa;AAAA,SAJjB;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,KAAK,EAAEL,MAAM,CAACE,OARhB;AASE,QAAA,OAAO,EAAC,UATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF,CAVF,EAoCE,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEQ,OAAO,CAACS,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CApCF,CADF;AA+CD;;;;EArEoBjC,S;;AAwEvBY,QAAQ,CAACsB,SAAT,GAAqB;AACnBT,EAAAA,SAAS,EAAExB,SAAS,CAACkC,MADF;AAEnBX,EAAAA,OAAO,EAAEvB,SAAS,CAACmC,MAAV,CAAiBC;AAFP,CAArB;AAKA,eAAelC,UAAU,CAACQ,MAAD,CAAV,CAAmBC,QAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport { Button, TextField } from '@material-ui/core';\n\n// Shared components\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletContent,\n  PortletFooter\n} from '../../../../components';\n\n// Component styles\nimport styles from './styles';\n\nclass Password extends Component {\n  state = {\n    values: {\n      password: '',\n      confirm: ''\n    }\n  };\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n\n    newState.values[field] = value;\n\n    this.setState(newState, this.validateForm);\n  };\n\n  render() {\n    const { classes, className, ...rest } = this.props;\n    const { values } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet\n        {...rest}\n        className={rootClassName}\n      >\n        <PortletHeader>\n          <PortletLabel\n            subtitle=\"Update password\"\n            title=\"Password\"\n          />\n        </PortletHeader>\n        <PortletContent>\n          <form className={classes.form}>\n            <TextField\n              className={classes.textField}\n              label=\"Password\"\n              name=\"password\"\n              onChange={event =>\n                this.handleFieldChange('password', event.target.value)\n              }\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Confirm password\"\n              name=\"confirm\"\n              onChange={event =>\n                this.handleFieldChange('confirm', event.target.value)\n              }\n              type=\"password\"\n              value={values.confirm}\n              variant=\"outlined\"\n            />\n          </form>\n        </PortletContent>\n        <PortletFooter className={classes.portletFooter}>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </PortletFooter>\n      </Portlet>\n    );\n  }\n}\n\nPassword.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Password);\n"]},"metadata":{},"sourceType":"module"}