{"ast":null,"code":"import _classCallCheck from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/austinirvine/Documents/genlouise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/austinirvine/Documents/genlouise/src/views/Reviews/ReviewCard/ReviewCard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, withStyles, Typography } from '@material-ui/core';\nimport { LocationOn as LocationOnIcon } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport BookingIcon from './icons/booking_icon.png';\nimport TripAdvisor from './icons/tripadvisor_icon.png';\nimport GoogleIcon from './icons/google.jpg';\nimport styles from './styles';\nimport './css/scrollbar.css';\n\nvar ReviewCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReviewCard, _Component);\n\n  function ReviewCard() {\n    _classCallCheck(this, ReviewCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReviewCard).apply(this, arguments));\n  }\n\n  _createClass(ReviewCard, [{\n    key: \"formatDate\",\n    value: function formatDate(date) {\n      var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          review = _this$props.review;\n      var sourceSite;\n\n      if (review.source === 'Booking.com') {\n        sourceSite = React.createElement(\"img\", {\n          alt: \"Booking.com\",\n          className: classes.site,\n          src: BookingIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      } else if (review.source === 'TripAdvisor') {\n        sourceSite = React.createElement(\"img\", {\n          alt: \"TripAdvisor\",\n          className: classes.site,\n          src: TripAdvisor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else if (review.source === 'Google') {\n        sourceSite = React.createElement(\"img\", {\n          alt: \"Google\",\n          className: classes.site,\n          src: GoogleIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.details,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.imageWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        src: review.avatarUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, review.name.charAt(0))), React.createElement(\"div\", {\n        className: classes.locationDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.name,\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, review.name), React.createElement(Typography, {\n        className: classes.location,\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, review.location && React.createElement(LocationOnIcon, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), review.location), React.createElement(Typography, {\n        className: classes.location,\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.formatDate(new Date(review.time)))), React.createElement(\"div\", {\n        className: classes.siteDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, sourceSite, React.createElement(Typography, {\n        className: classes.location,\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, review.source), React.createElement(Typography, {\n        className: classes.title,\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, review.score))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"scroll\",\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, review.comment))));\n    }\n  }]);\n\n  return ReviewCard;\n}(Component);\n\nReviewCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ReviewCard);","map":{"version":3,"sources":["/Users/austinirvine/Documents/genlouise/src/views/Reviews/ReviewCard/ReviewCard.jsx"],"names":["React","Component","PropTypes","Avatar","withStyles","Typography","LocationOn","LocationOnIcon","Card","CardContent","BookingIcon","TripAdvisor","GoogleIcon","styles","ReviewCard","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","props","classes","review","sourceSite","source","site","card","details","imageWrapper","avatar","avatarUrl","name","charAt","locationDetails","location","icon","formatDate","Date","time","siteDetails","title","score","comment","propTypes","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Avatar, withStyles, Typography} from '@material-ui/core';\nimport {LocationOn as LocationOnIcon} from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport BookingIcon from './icons/booking_icon.png';\nimport TripAdvisor from './icons/tripadvisor_icon.png';\nimport GoogleIcon from './icons/google.jpg';\nimport styles from './styles';\nimport './css/scrollbar.css';\n\n\nclass ReviewCard extends Component {\n\n  formatDate(date) {\n    var monthNames = [\n      'January', 'February', 'March',\n      'April', 'May', 'June', 'July',\n      'August', 'September', 'October',\n      'November', 'December'\n    ];\n\n    var day = date.getDate();\n    var monthIndex = date.getMonth();\n    var year = date.getFullYear();\n\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\n  }\n\n  render() {\n    const {classes, review} = this.props;\n    let sourceSite;\n    if (review.source === 'Booking.com') {\n      sourceSite = <img alt=\"Booking.com\" className={classes.site} src={BookingIcon}/>;\n    } else if (review.source === 'TripAdvisor') {\n      sourceSite = <img alt=\"TripAdvisor\" className={classes.site} src={TripAdvisor}/>;\n    } else if (review.source === 'Google') {\n      sourceSite = <img alt=\"Google\" className={classes.site} src={GoogleIcon}/>;\n    }\n\n    return (\n      <Card className={classes.card}>\n\n        <CardContent>\n\n          <div className={classes.details}>\n\n            <div className={classes.imageWrapper}>\n              <Avatar className={classes.avatar} src={review.avatarUrl}>\n                {review.name.charAt(0)}\n              </Avatar>\n            </div>\n\n            <div className={classes.locationDetails}>\n\n              <Typography className={classes.name} variant=\"h4\">\n                {review.name}\n              </Typography>\n\n              <Typography className={classes.location} variant=\"h4\">\n                {review.location && <LocationOnIcon className={classes.icon}/>}\n                {review.location}\n              </Typography>\n\n              <Typography className={classes.location} variant=\"h4\">\n                {this.formatDate(new Date(review.time))}\n              </Typography>\n\n            </div>\n\n            <div className={classes.siteDetails}>\n              {sourceSite}\n\n              <Typography className={classes.location} variant=\"h4\">\n                {review.source}\n              </Typography>\n\n              <Typography className={classes.title} variant=\"h4\">\n                {review.score}\n              </Typography>\n\n            </div>\n\n          </div>\n\n          <div >\n\n            <Typography className=\"scroll\" variant=\"body1\">\n              {review.comment}\n            </Typography>\n\n          </div>\n\n        </CardContent>\n\n      </Card>\n    );\n  }\n}\n\nReviewCard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ReviewCard);\n"]},"metadata":{},"sourceType":"module"}